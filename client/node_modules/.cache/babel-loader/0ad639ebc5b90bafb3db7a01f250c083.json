{"ast":null,"code":"import _classCallCheck from \"/Users/abbychristens/www/react_modules/twitch_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/abbychristens/www/react_modules/twitch_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/abbychristens/www/react_modules/twitch_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/abbychristens/www/react_modules/twitch_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/abbychristens/www/react_modules/twitch_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/abbychristens/www/react_modules/twitch_app/client/src/components/streams/StreamEdit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamEdit, _Component);\n\n  function StreamEdit() {\n    _classCallCheck(this, StreamEdit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamEdit).apply(this, arguments));\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.match.params.id);\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"Loading Your Stream\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"StreamEdit\");\n    }\n  }]);\n\n  return StreamEdit;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/abbychristens/www/react_modules/twitch_app/client/src/components/streams/StreamEdit.js"],"names":["React","Component","connect","fetchStream","editStream","StreamForm","StreamEdit","console","log","props","match","params","id","stream","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,U;;;;;;;;;;;;;wCACe;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACA,WAAKH,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;;6BAEO;AACN,UAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAwB;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AACD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;;;EAXsBZ,S;;AAczB,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AAAEH,IAAAA,MAAM,EAAEE,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACN,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeV,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA,WAAW,EAAXA;AAAF,CAAlB,CAAP,CAA0CG,UAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends Component {\n  componentDidMount(){\n    console.log(this.props.match.params.id)\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render(){\n    if (!this.props.stream) {\n      return <div>Loading Your Stream</div>\n    }\n    return <div>StreamEdit</div>\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id]}\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}